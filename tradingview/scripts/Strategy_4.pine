//@version=5

//ADX + BB %B + AO + EMA

strategy('Strategy_4', {{{header}}})

{{{date_range}}}

take_profit_perc = input.int(title='Take Profit %', defval=10, minval=1, maxval=100)
stop_loss_perc = input.int(title='Stop Loss %', defval=5, minval=1, maxval=100)
bb_overbought = input.int(title='BB %B Overbought', defval=75, minval=1, maxval=100)
bb_oversold = input.int(title='BB %B Oversold', defval=25, minval=1, maxval=100)
ao_value = input(title='Awesome Oscillator', defval=2)
adx_value = input(title='ADX', defval=15)

ema5 = ta.ema(close, 5)
ema21 = ta.ema(close, 21)
ema50 = ta.ema(close, 50)
ema200 = ta.ema(close, 200)

//BB %B
length = input.int(20, minval=1)
src = input(close, title='Source')
mult = input.float(2.0, minval=0.001, maxval=50, title='StdDev')
basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev
bbr = (src - lower) / (upper - lower)

//Awesome Oscillator
ao = ta.sma(hl2, 5) - ta.sma(hl2, 34)

// ADX
adxlen = input(14, title='ADX Smoothing')
dilen = input(14, title='DI Length')
dirmov(len) =>
    up = ta.change(high)
    down = -ta.change(low)
    plusDM = na(up) ? na : up > down and up > 0 ? up : 0
    minusDM = na(down) ? na : down > up and down > 0 ? down : 0
    truerange = ta.rma(ta.tr, len)
    plus = fixnan(100 * ta.rma(plusDM, len) / truerange)
    minus = fixnan(100 * ta.rma(minusDM, len) / truerange)
    [plus, minus]
adx(dilen, adxlen) =>
    [plus, minus] = dirmov(dilen)
    sum = plus + minus
    adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
    adx
sig = adx(dilen, adxlen)

long_strategy = ema5 > ema21 and ema50 > ema200 and bbr > bb_overbought / 100 and ao > ao_value and sig > adx_value
short_strategy = ema5 < ema21 and ema50 < ema200 and bbr < bb_oversold / 100 and ao < -ao_value and sig > adx_value

plot(ema5, color=color.new(color.blue, 0))
plot(ema21, color=color.new(color.aqua, 0))
plot(ema50, color=color.new(color.purple, 0))
plot(ema200, color=color.new(color.red, 0))
bgcolor(color=long_strategy ? color.green : na, transp=80)
bgcolor(color=short_strategy ? color.purple : na, transp=80)

if long_strategy
    strategy.entry('long', strategy.long, 100, when=date_range)
    strategy.exit('exit', 'long', stop=strategy.position_avg_price * (100 - stop_loss_perc) / 100, limit=strategy.position_avg_price * (100 + take_profit_perc) / 100)
if short_strategy
    strategy.entry('short', strategy.short, 100, when=date_range)
    strategy.exit('exit', 'short', stop=strategy.position_avg_price * (100 + stop_loss_perc) / 100, limit=strategy.position_avg_price * (100 - take_profit_perc) / 100)

// Squeeze
sqsrc = close
sqlength = input(34)
sqmedian = 0
sqmult = input(2.5)
sqoffset = input(20)
tr_custom() =>
    x1 = high - low
    x2 = math.abs(high - close[1])
    x3 = math.abs(low - close[1])
    math.max(x1, math.max(x2, x3))

atr_custom(x, y) =>
    ta.sma(x, y)

sqdev = sqmult * ta.stdev(sqsrc, sqlength)
sqbasis = ta.linreg(sqsrc, sqlength, sqmedian)
ul = sqbasis + sqdev
ll = sqbasis - sqdev
tr_v = tr_custom()
acustom = 2 * atr_custom(tr_v, sqlength)
uls = sqbasis + acustom
lls = sqbasis - acustom

// Plot stdev channel
plot(sqbasis, linewidth=1, color=color.new(color.navy, 0), style=plot.style_line, linewidth=1, title='sqmedian')
lb = plot(ul, color=color.new(color.red, 0), linewidth=1, title='BB+', style=plot.style_linebr)
tb = plot(ll, color=color.new(color.green, 0), linewidth=1, title='BB-', style=plot.style_linebr)
fill(tb, lb, color.new(color.silver, 90), title='Region fill')

// Plot ATR channel
plot(sqbasis, linewidth=2, color=color.new(color.navy, 0), style=plot.style_line, linewidth=2, title='sqmedian')
ls = plot(uls, color=color.new(color.red, 0), linewidth=1, title='Starc+', style=plot.style_circles)
ts = plot(lls, color=color.new(color.green, 0), linewidth=1, title='Star-', style=plot.style_circles)
fill(ts, tb, color.new(color.green, 90), title='Region fill')
fill(ls, lb, color.new(color.red, 90), title='Region fill')

// Mark SQZ
plot_offs_high = 2
plot_offs_low = 2
sqz_f = uls > ul and lls < ll
b_color = sqz_f ? color.teal : na
plot(sqz_f ? lls - plot_offs_low : na, color=b_color, style=plot.style_cross, linewidth=2)
plot(sqz_f ? uls + plot_offs_high : na, color=b_color, style=plot.style_cross, linewidth=2)








